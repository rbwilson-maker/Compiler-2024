//test return 1

struct node {
  int data;
  struct node* left;
  struct node* right;  
};

bool eqGrandChildren(struct node* t1, struct node* t2) {
    return (*(t1->left)).right->data == (*(((*t2).right)->left)).data;
}

struct node* makeTree(int depth) {
   if (depth == 0) return NULL;
   struct node* t = alloc(struct node); 
   t->data = 0;
   t->left = makeTree(depth - 1);
   t->right = makeTree(depth - 1);
   return t;
}

int main() {
    struct node* t1 = makeTree(3);
    struct node* t2 = makeTree(3);
    return eqGrandChildren(t1, t2) ? 1 : 0;
}