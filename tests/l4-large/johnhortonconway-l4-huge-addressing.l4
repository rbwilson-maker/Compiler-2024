//test abort

struct s1 {
    int a;
    struct s3* s2;
    struct s2* ptr;
};

struct s2 {
    int b;
    struct s1 next;
};

int main() {
    struct s2 *tmp = alloc(struct s2);
    tmp->next.ptr = tmp;
    int ret = tmp->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr
                 ->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr
                 ->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->next.ptr->b;
    assert(ret == 1);
    return 0;
}