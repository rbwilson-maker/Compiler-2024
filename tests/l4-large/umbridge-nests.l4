//test return 42

struct level0;
struct level1;
struct level2;
struct level3;
struct level4;
struct level5;
struct level6;
struct level7;
struct level8;
struct level9;

typedef bool monster;

struct level9 {
    int[] garbage;
    monster[] monsters;
    int *********obstacle;
    bool switch;
    int score;
    int[] gems;
    struct level0 *exit;
};

struct level8 {
    monster m1;
    int ********obstacle;
    monster m2;
    struct level7 *trap;
    monster m3;
    struct level9 next;
    monster m4;
};

struct level7 {
    int *******obstacle;
    monster m1;
    struct level6 *trap;
    monster m2;
    struct level8 next;
};

struct level6 {
    monster m1;
    int ******obstacle;
    struct level5 *trap;
    struct level7 next;
    monster m2;
};

struct level5 {
    int *****obstacle;
    struct level4 *trap;
    monster m1;
    struct level6 next;
    monster m2;
};

struct level4 {
    monster m1;
    int ****obstacle;
    monster m2;
    struct level3 *trap;
    struct level5 next;
};

struct level3 {
    int ***obstacle;
    struct level2 *trap;
    struct level4 next;
    monster m;
};

struct level2 {
    int **obstacle;
    struct level1 *trap;
    monster m;
    struct level3 next;
};

struct level1 {
    int *obstacle;
    monster m;
    struct level0 *trap;
    struct level2 next;
};

struct level0 {
    int obstacle;
    struct level1 next;
};

typedef struct level0 lvl0;
typedef struct level1 lvl1;
typedef struct level2 lvl2;
typedef struct level3 lvl3;
typedef struct level4 lvl4;
typedef struct level5 lvl5;
typedef struct level6 lvl6;
typedef struct level7 lvl7;
typedef struct level8 lvl8;
typedef struct level9 lvl9;

lvl0 * init() {
    lvl0 *l0 = alloc(lvl0);
    l0->next.next.next.next.next.next.next.next.next.gems = alloc_array(int, 10);
    l0->next.next.next.next.next.next.next.next.next.gems;
    for (int i = 0; i < 10; i++) {
        l0->next.next.next.next.next.next.next.next.next.gems[i] = (i * 5 + 2) % 45;
    }
    l0->next.next.next.next.next.next.next.next.next.garbage = alloc_array(int, 3);
    l0->next.next.next.next.next.next.next.next.next.switch = false;
    l0->next.next.next.next.next.next.next.next.next.score = -1;
    return l0;
}

int main() {
    struct level0 *start = init();
    int[] answers = start->next.next.next.next.next.next.next.next.next.gems;
    for (int i = 0; i < 10; i++) {
        if (answers[i] >= 40)
            return answers[i];
    }
    assert(false);
    // game over
    return 0;
}