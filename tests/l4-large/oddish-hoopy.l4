//test abort
int main() {
  int* x = alloc(int);
  *x = 2;
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(NULL == NULL);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(*x == 2);
  assert(x == NULL);
  return *x;
}
