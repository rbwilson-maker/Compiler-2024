//test return 3

int get_index_of_first_zero_and_set_to_one(int[] A){
    int i = 0;

    while (A[i] > 0) {
	i++;
    }

    A[i] = 1;

    return 0;
}

int main(){
    int[] A = alloc_array(int, 5);
    int[] B = alloc_array(int, 2);

    B[0] = 0;
    B[1] = 1;

    B[get_index_of_first_zero_and_set_to_one(A)] += 3;

    /* If get_index_of_first_zero_and_set_to_one(A) is called once, then
       it will return 0.  If it is called a second time, then it will return 
       1.  

       If the assignment operation is implemented correctly, then 
       B[get_index_... (A)] should be B[0], which means that this is equivalent
       to B[0] = B[0] + 3, so B[0] will end with value 3.

       If the assignment operation is incorrectly elaborated to: 
       	B[get_index_... (A)] = B[get_index_... (A)] + 3;
       then this will end up being the same as:
	B[0] = B[1] + 3;
       so, B[0] will end with value 4.
     */

    return B[0];
}
