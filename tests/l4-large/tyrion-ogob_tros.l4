//test return 36892235

void swap(int[] v4, int v5, int v6) {
  int v8 = (v4)[v5];
  (v4)[v5] = (v4)[v6];
  (v4)[v6] = v8;
}
int go(int v0, int[] v1, int v2, int v3) {
  if ((v2) == (1)) {
    for (int v9 = 1; (v9) < (v0); v9++) {
      if (((v1)[(v9) - (1)]) > ((v1)[v9])) {
        return (v3) + (1);
      }
    }
    return (-(v3)) - (1);
  }
  v3 = go(v0, v1, (v2) - (1), v3);
  if ((v3) < (0)) {
    return v3;
  }
  for (int v10 = 0; (v10) < ((v2) - (1)); v10++) {
    if (((v2) % (2)) == (0)) {
      swap(v1, v10, (v2) - (1));
    }
    else {
      swap(v1, 0, (v2) - (1));
    }
    v3 = go(v0, v1, (v2) - (1), v3);
    if ((v3) < (0)) {
      return v3;
    }
  }
  return v3;
}
int main() {
  int[] v11 = alloc_array(int, 11);
  (v11)[0] = 2023623117;
  (v11)[0] = 1100;
  (v11)[1] = 1587860114;
  (v11)[1] = 1000;
  (v11)[2] = 329741947;
  (v11)[2] = 900;
  (v11)[3] = 711194208;
  (v11)[3] = 800;
  (v11)[4] = 1539575280;
  (v11)[4] = 700;
  (v11)[5] = 81327426;
  (v11)[5] = 600;
  (v11)[6] = 692428610;
  (v11)[6] = 500;
  (v11)[7] = 2106391109;
  (v11)[7] = 400;
  (v11)[8] = 421992002;
  (v11)[8] = 300;
  (v11)[9] = 2127193268;
  (v11)[9] = 200;
  (v11)[10] = 1855117053;
  (v11)[10] = 100;
  int v12 = go(11, v11, 11, 0);
  for (int v13 = 1; (v13) < (11); v13++) {
    assert(((v11)[(v13) - (1)]) <= ((v11)[v13]));
  }
  return (-(v12)) - (1);
}

