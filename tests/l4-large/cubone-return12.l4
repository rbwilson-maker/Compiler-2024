//test return 5
//Finds the length of the longest palindromic subarray of an array

int longest(int[] a, int length) {
  int max = 0;
  
  for (int i = 0; i < length; i++) {
    int curr_length = 1;
    int left = i - 1;
    int right = i + 1;

    while ((left >= 0) && (right < length) && (a[left] == a[right])) {
      curr_length += 2;
      left -= 1;
      right += 1;
    }

    if (curr_length > max)
      max = curr_length;
  }

  for (int i = 0; i < length + 1; i++) {
    int curr_length = 0;
    int left = i - 1;
    int right = i;

    while ((left >= 0) && (right < length) && (a[left] == a[right])) {
      curr_length += 2;
      left -= 1;
      right += 1;
    }

    if (curr_length > max)
      max = curr_length;
  }

  return max;
}

int main() {
  int[] a = alloc_array(int, 10);
  a[0] = 1;
  a[1] = 2;
  a[2] = 1;
  a[3] = 1;
  a[4] = 2;
  a[5] = 2;
  a[6] = 2;
  a[7] = 1;
  a[8] = 2;
  a[9] = 1;

  return longest(a, 10);
}
