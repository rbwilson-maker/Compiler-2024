//test return 1
// selection sort

void swap(int[] A, int i, int j){
  int temp = A[i];
  A[i] = A[j];
  A[j] = temp;
}

int find_min_idx(int[] A, int len, int start_idx){
  int min_idx = start_idx;
  for (int i = start_idx + 1; i < len; i++){
    if (A[i] < A[min_idx]){
      min_idx = i;
    }
  }
  return min_idx;
}

void selection_sort(int[] A, int len){
  int min_idx;
  for (int i = 0; i < len; i++){
    min_idx = find_min_idx(A, len, i);
    swap(A, i, min_idx);
  }
}

int main(){
  int[] A = alloc_array(int, 8);
  A[0] = 78;
  A[1] = 56;
  A[2] = 56;
  A[3] = 62;
  A[4] = 3;
  A[5] = 90;
  A[6] = 6;
  A[7] = 22;

  selection_sort(A, 8);
  
  int[] sorted_A = alloc_array(int, 8);
  sorted_A[0] = 3;
  sorted_A[1] = 6;
  sorted_A[2] = 22;
  sorted_A[3] = 56;
  sorted_A[4] = 56;
  sorted_A[5] = 62;
  sorted_A[6] = 78;
  sorted_A[7] = 90;

  for (int i = 0; i < 8; i++){
    assert(A[i] == sorted_A[i]);
  }
  return 1;
}
