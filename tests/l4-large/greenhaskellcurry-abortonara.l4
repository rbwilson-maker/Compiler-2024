//test abort
/*
    abortonara: calls assert lots of times over an array

    Tests:
    - Passing around arrays
    - Recursion speed/efficient allocation of stack frames
    - alloc_array() inserts default values
*/

bool scan(bool[] arr, int arrSize, int currIdx, bool acc) {
    if (currIdx >= arrSize) {
        return acc;
    }

    acc = acc && arr[currIdx];

    assert(acc);
    return scan(arr, arrSize, currIdx + 1, acc);
}

int main() {
    int arrSize = 100000;

    bool[] arr = alloc_array(bool, arrSize);
    for (int i = 0; i < arrSize - 1; i++) {
        /*
            Note that we don't initialize the last element of the array. The C0
            specification says that the default value should be `false`.
        */
        arr[i] = true;
    }

    scan(arr, arrSize, 0, true);

    return 0;
}
