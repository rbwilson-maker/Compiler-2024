//test return 42
// test for constructing a deeply nested type

struct unit {
};
typedef struct unit unit_t;

int main() {
  unit_t[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[] a;
  a = alloc_array(unit_t[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*[]*, 10000);
  assert(a[1209] == NULL);
  return 42;
}
