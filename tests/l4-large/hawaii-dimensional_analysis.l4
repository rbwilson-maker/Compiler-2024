//test return -786432

int main()
{
  int[][][][][][][][][][][][][][][][][][][][] hawaii;
  int counter = 0;
  int sum = 0;
  
  hawaii = alloc_array(int[][][][][][][][][][][][][][][][][][][],2);
  for (int a = 0; a < 2; a++)
  {
    hawaii[a] = alloc_array(int[][][][][][][][][][][][][][][][][][],2);
    for (int b = 0; b < 2; b++)
    {
      hawaii[a][b] = alloc_array(int[][][][][][][][][][][][][][][][][],2);
      for (int c = 0; c < 2; c++)
      {
        hawaii[a][b][c] = alloc_array(int[][][][][][][][][][][][][][][][],2);
        for (int d = 0; d < 2; d++)
        {
          hawaii[a][b][c][d] = alloc_array(int[][][][][][][][][][][][][][][],2);
          for (int e = 0; e < 2; e++)
          {
            hawaii[a][b][c][d][e] = alloc_array(int[][][][][][][][][][][][][][],2);
            for (int f = 0; f < 2; f++)
            {
              hawaii[a][b][c][d][e][f] = alloc_array(int[][][][][][][][][][][][][],2);
              for (int g = 0; g < 2; g++)
              {
                hawaii[a][b][c][d][e][f][g] = alloc_array(int[][][][][][][][][][][][],2);
                for (int h = 0; h < 2; h++)
                {
                  hawaii[a][b][c][d][e][f][g][h] = alloc_array(int[][][][][][][][][][][],2);
                  for (int i = 0; i < 2; i++)
                  {
                    hawaii[a][b][c][d][e][f][g][h][i] = alloc_array(int[][][][][][][][][][],2);
                    for (int j = 0; j < 2; j++)
                    {
                      hawaii[a][b][c][d][e][f][g][h][i][j] = alloc_array(int[][][][][][][][][],2);
                      for (int k = 0; k < 2; k++)
                      {
                        hawaii[a][b][c][d][e][f][g][h][i][j][k] = alloc_array(int[][][][][][][][],2);
                        for (int l = 0; l < 2; l++)
                        {
                          hawaii[a][b][c][d][e][f][g][h][i][j][k][l] = alloc_array(int[][][][][][][],2);
                          for (int m = 0; m < 2; m++)
                          {
                            hawaii[a][b][c][d][e][f][g][h][i][j][k][l][m] = alloc_array(int[][][][][][],2);
                            for (int n = 0; n < 2; n++)
                            {
                              hawaii[a][b][c][d][e][f][g][h][i][j][k][l][m][n] = alloc_array(int[][][][][],2);
                              for (int o = 0; o < 2; o++)
                              {
                                hawaii[a][b][c][d][e][f][g][h][i][j][k][l][m][n][o] = alloc_array(int[][][][],2);
                                for (int p = 0; p < 2; p++)
                                {
                                  hawaii[a][b][c][d][e][f][g][h][i][j][k][l][m][n][o][p] = alloc_array(int[][][],2);
                                  for (int q = 0; q < 2; q++)
                                  {
                                    hawaii[a][b][c][d][e][f][g][h][i][j][k][l][m][n][o][p][q] = alloc_array(int[][],2);
                                    for (int r = 0; r < 2; r++)
                                    {
                                      hawaii[a][b][c][d][e][f][g][h][i][j][k][l][m][n][o][p][q][r] = alloc_array(int[],2);
                                      for (int s = 0; s < 2; s++)
                                      {
                                        hawaii[a][b][c][d][e][f][g][h][i][j][k][l][m][n][o][p][q][r][s] = alloc_array(int,2);
                                        for (int t = 0; t < 2; t++)
                                        {
                                          hawaii[a][b][c][d][e][f][g][h][i][j][k][l][m][n][o][p][q][r][s][t] = counter;
                                          counter++;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }


  for (int a = 0; a < 2; a++)
  {
    for (int b = 0; b < 2; b++)
    {
      for (int c = 0; c < 2; c++)
      {
        for (int d = 0; d < 2; d++)
        {
          for (int e = 0; e < 2; e++)
          {
            for (int f = 0; f < 2; f++)
            {
              for (int g = 0; g < 2; g++)
              {
                for (int h = 0; h < 2; h++)
                {
                  for (int i = 0; i < 2; i++)
                  {
                    for (int j = 0; j < 2; j++)
                    {
                      for (int k = 0; k < 2; k++)
                      {
                        for (int l = 0; l < 2; l++)
                        {
                          for (int m = 0; m < 2; m++)
                          {
                            for (int n = 0; n < 2; n++)
                            {
                              for (int o = 0; o < 2; o++)
                              {
                                for (int p = 0; p < 2; p++)
                                {
                                  for (int q = 0; o < 2; o++)
                                  {
                                    for (int r = 0; p < 2; p++)
                                    {
                                      for (int s = 0; o < 2; o++)
                                      {
                                        for (int t = 0; p < 2; p++)
                                        {
                                          sum += hawaii[a][b][c][d][e][f][g][h][i][j][k][l][m][n][o][p][q][r][s][t];
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
  return sum;
}
