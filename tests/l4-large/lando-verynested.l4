//test return 6

struct A {
    int value;
};

struct B {
    struct A a;
};

struct C {
    struct B b;
};

struct D {
    struct C c;
};

struct E {
    struct D d;
};

struct F {
    struct E e;
};

struct G {
    struct F f;
};

struct H {
    struct G g;
};

struct I {
    struct H h;
};

struct J {
    struct I i;
};

struct K {
    struct J j;
};

struct L {
    struct K k;
};

struct M {
    struct L l;
};

struct N {
    struct M m;
};

struct O {
    struct N n;
};

struct P {
    struct O o;
};

struct Q {
    struct P p;
};

struct R {
    struct Q q;
};

struct S {
    struct R r;
};

struct T {
    struct S s;
};

struct U {
    struct T t;
};

struct V {
    struct U u;
};

struct W {
    struct V v;
};

struct X {
    struct W w;
};

struct Y {
    struct X x;
};

struct Z {
    struct Y y;
};

int main() {
    struct Z* test1 = alloc(struct Z);
    struct Z* test2 = alloc(struct Z);
    test1->y.x.w.v.u.t.s.r.q.p.o.n.m.l.k.j.i.h.g.f.e.d.c.b.a.value = 6;
    
    for (int i = 0; i < 10000000; i++) {
        if (i % 2 == 0) {
            test2->y.x.w.v.u.t.s.r.q.p.o.n.m.l.k.j.i.h.g.f.e.d.c.b.a.value
              = test1->y.x.w.v.u.t.s.r.q.p.o.n.m.l.k.j.i.h.g.f.e.d.c.b.a.value;
        } else {
            test1->y.x.w.v.u.t.s.r.q.p.o.n.m.l.k.j.i.h.g.f.e.d.c.b.a.value
              = test2->y.x.w.v.u.t.s.r.q.p.o.n.m.l.k.j.i.h.g.f.e.d.c.b.a.value;
        }
    }
    
    return test2->y.x.w.v.u.t.s.r.q.p.o.n.m.l.k.j.i.h.g.f.e.d.c.b.a.value;
}
