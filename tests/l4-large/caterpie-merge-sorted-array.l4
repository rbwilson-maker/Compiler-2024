//test return 0
// merge sorted array
void merge(int[] nums1, int m, int[] nums2, int n)
{
  int nums1_ptr = m-1;
  int nums2_ptr = n-1;
  int ptr = m+n-1;
  while(nums1_ptr >=0 && nums2_ptr >= 0) {
    if(nums1[nums1_ptr] > nums2[nums2_ptr]) {
      nums1[ptr] = nums1[nums1_ptr];
      ptr--;
      nums1_ptr--;
    } else {
      nums1[ptr] = nums2[nums2_ptr];
      ptr--;
      nums2_ptr--;
    }
  }
  while(nums2_ptr>=0) {
    nums1[ptr] = nums2[nums2_ptr];
    ptr--;
    nums2_ptr--;
  }
}

int main()
{
  int[] nums1 = alloc_array(int, 10);
  int[] nums2 = alloc_array(int, 3);

  nums1[0] = 1;
  nums1[1] = 4;
  nums1[2] = 8;
  nums1[3] = 12;
  nums1[4] = 17;
  nums1[5] = 21;
  nums1[6] = 23;
  
  nums2[0] = -1;
  nums2[1] = 3;
  nums2[2] = 9;

  merge(nums1, 7, nums2, 3);
  
  // check if the merge succeeds
  for (int i = 0; i != 9; i++) 
  {
    assert(nums1[i] != 0 && nums1[i+1] != 0);
    assert(nums1[i] <= nums1[i]);
  }
  return 0;
}
