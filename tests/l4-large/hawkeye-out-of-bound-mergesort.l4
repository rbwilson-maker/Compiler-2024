//test memerror

void swap(int[] A, int i, int j) {
    int tmp = A[i];
    A[i] = A[j];
    A[j] = tmp;
}

void merge(int[] A, int lo, int mid, int hi) {
    int start = mid + 1;
    if (A[mid] <= A[start])
        return;
    while (lo <= mid && start < hi) {
        if (A[lo] <= A[start]) {
            lo++;
        } else {
            int value = A[start];
            int idx = start;
            while (idx != lo) {
                A[idx] = A[idx-1];
                idx--;
            }
            A[lo] = value;
            lo++;
            mid++;
            start++;
        }
    }
}

void sort (int[] A, int lo, int hi)    {  
  if (hi-lo <= 1) return;  
  int mid = lo + (hi-lo)/2;  
  
  sort(A, lo, mid);  
  sort(A, mid, hi); 
  merge(A, lo, mid, hi);  
  return;  
}  

bool isSorted(int[] A, int n) {
    for (int i = 0; i < n-1; i++) {
        if (A[i] > A[i+1]) return false;
    }
    return true;
}

int main () {
    int[] A = alloc_array(int, 100);
    for (int i = 0; i < 99; i++) A[i] = 99-i;
    sort(A, 0, 100);
    return 1;
}