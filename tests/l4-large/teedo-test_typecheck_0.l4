//test typecheck

// https://leetcode.com/problems/palindrome-linked-list/


bool isPalindrome(ListNode* head) {
    if (NULL == head || NULL == head->next) {
        return true;
    }
    ListNode *slow = head;
    ListNode *fast = head->next;
    ListNode *front = head;
    ListNode *end = fast;

    while(fast != NULL) {
        slow = slow->next;
        fast = fast->next;
        if (fast != NULL) {
            fast = fast->next;
        }
    }
    end = reverseLinkedList(slow);

    while(front != end) {
        if (front->val != end->val) {
            return false;
        }
        front = front->next;
        if (front == end) {
            return true;
        }
        end = end->next;
    }
    return true;
}

int main() {
    ListNode *head = NULL;
    if (isPalindrome(head)) {
        return 1;
    }
    return 0;
}
