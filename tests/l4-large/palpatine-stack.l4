//test return 20
typedef struct list_node list;
struct list_node {
  int data;
  list* next;
};

typedef struct stack_header stack;
struct stack_header {
  list* top;
  list* bottom;
};

stack* stack_new()
//@ensures is_stack(\result);
//@ensures stack_empty(\result);
{
  stack* S = alloc(stack);
  list* l = alloc(list);
  S->top = l;
  S->bottom = l;
  return S;
}

void push(stack* S, int x)
//@requires is_stack(S);
//@ensures is_stack(S);
{
  list* l = alloc(list);
  l->data = x;
  l->next = S->top;
  S->top = l;
}

int pop(stack* S)
//@requires is_stack(S);
//@requires !stack_empty(S);
//@ensures is_stack(S);
{
  int e = S->top->data;
  S->top = S->top->next;
  return e;
}

int main(){
	stack* s = stack_new();
	push(s, 20);
	push(s, 1);
	pop(s);
	return pop(s);
}
