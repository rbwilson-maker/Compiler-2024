//test return 5

struct item {
  int x;
  int y;
};

typedef struct item item;

int rand(int seed) {
  return 1103515245 * seed + 12345;
}

int mod(int v, int count) {
  int ret = v % count;
  if (ret < 0) {
    ret += count;
  }
  return ret;
}

int main() {
  int count = 100;
  item[][] items = alloc_array(item[], count);

  // fill array with "random" numbers
  int n = 32509987;
  for(int i = 0; i < count; i++) {
    items[i] = alloc_array(item, count);
    for(int j = 0; j < count; j++) {
      n = rand(n);
      items[i][j].x = mod(n, count);
      n = rand(n);
      items[i][j].y = mod(n, count);
    }
  }

  n = rand(n);

  // not sure what this does, but I hope it's interesting
  for (int k = 0; k < mod(n, 100); k++) {
    for (int i = 0; i < count; i++) {
      for (int j = 0; j < count; j++) {
        int x = items[i][j].x;
	int y = items[i][j].y;
	int x_over_there = items[y][x].x;
	int y_over_there = items[y][x].y;
	items[i][j].x = y_over_there;
	items[i][j].y = x_over_there;
	items[x][y].x = x;
	items[x][y].y = y;
      }
    }
  }

  n = rand(n);
  int x = mod(n, count);
  n = rand(n);
  int y = mod(n, count);
  return items[x][y].x + items[x][y].y;
}
