//test return 1609843
//N-ary tree sumation.

struct node {
    struct node *[] a;
    int val;
};

typedef struct node node_t;

int tree_add(int depth, int width, node_t *n) {
    if (depth == 0) {
        return 0;
    }
    int sum = 0;
    for (int i = 0; i < width; i ++) {
        sum += tree_add(depth - 1, width + 1, n->a[i]);
    }
    return n->val + sum;
}

void tree_alloc(int depth, int width, node_t *n) {
    if (depth == 0) {
        return;
    }

    n->a = alloc_array(struct node *, width);
    for (int i = 0; i < width; i++) {
        n->a[i] = alloc(struct node);
        n->a[i]->val = i;
        tree_alloc(depth - 1, width + 1, n->a[i]);
    }
}

int main() {
   node_t *n = alloc(node_t);
   tree_alloc(10, 1, n);
   return tree_add(10, 1, n); 
}
