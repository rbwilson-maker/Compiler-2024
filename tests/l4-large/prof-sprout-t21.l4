//test return 0

bool subsetsum(int[] numbers, int index, int len, int sum, bool*[][] memo) {
  if (index >= len) return sum == 0;
  if (sum < 0) return false;
  if (memo[index][sum] == NULL) {
    bool *yes = alloc(bool);
    *yes = subsetsum(numbers, index+1, len, sum, memo) ||
               subsetsum(numbers, index+1, len, sum-numbers[index], memo);
    memo[index][sum] = yes;
  }
  return *memo[index][sum];
}

int main() {
  int[] numbers = alloc_array(int, 6);
  numbers[0] = 3;
  numbers[1] = 34;
  numbers[2] = 4;
  numbers[3] = 12;
  numbers[4] = 5;
  numbers[5] = 2;
  bool*[][] memo = alloc_array(bool*[], 6);
  for (int i = 0; i < 6; i++) {
    memo[i] = alloc_array(bool*, 61); //max possible sum for this example
    for (int j = 0; j < 61; j++) {
      memo[i][j] = NULL;
    }
  }
  return (subsetsum(numbers, 0, 6, 9, memo)) ? 0 : 1;
}
