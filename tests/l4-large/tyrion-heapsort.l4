//test return 1903141329

struct heap {
int[] arr;
int len;
int cap;
};
typedef struct heap heap_t;
void heapAdd(heap_t* v2, int v3) {
  int v6 = (v2)->len;
  (v2)->len++;
  ((v2)->arr)[v6] = v3;
  while ((v6) > (0)) {
    if ((((v2)->arr)[v6]) > (((v2)->arr)[(((v6) + (1)) / (2)) - (1)])) {
      ((v2)->arr)[v6] = ((v2)->arr)[(((v6) + (1)) / (2)) - (1)];
      ((v2)->arr)[(((v6) + (1)) / (2)) - (1)] = v3;
      v6 = (((v6) + (1)) / (2)) - (1);
    }
    else {
      return;
    }
  }
}
int heapRem(heap_t* v4) {
  int v7 = 0;
  int v8 = ((v4)->arr)[0];
  (v4)->len--;
  ((v4)->arr)[v7] = ((v4)->arr)[(v4)->len];
  bool v9 = false;
  while ((!(v9)) && ((((2) * (v7)) + (1)) < ((v4)->len))) {
    int v10 = ((2) * (v7)) + (1);
    if ((((v10) + (1)) < ((v4)->len)) && ((((v4)->arr)[v10]) < (((v4)->arr)[(v10) + (1)]))) {
      v10 = (v10) + (1);
    }
    if ((((v4)->arr)[v10]) > (((v4)->arr)[v7])) {
      int v11 = ((v4)->arr)[v10];
      ((v4)->arr)[v10] = ((v4)->arr)[v7];
      ((v4)->arr)[v7] = v11;
      v7 = v10;
    }
    else {
      v9 = true;
    }
  }
  return v8;
}
void sort(int v0, int[] v1) {
  heap_t* v12 = alloc(heap_t);
  (v12)->arr = v1;
  (v12)->len = 0;
  (v12)->cap = v0;
  for (int v13 = 0; (v13) < (v0); v13++) {
    heapAdd(v12, (v1)[v13]);
  }
  for (int v13 = (v0) - (1); (v13) >= (0); v13--) {
    (v1)[v13] = heapRem(v12);
  }
}
int main() {
  int[] v14 = alloc_array(int, 411);
  (v14)[0] = 1528273025;
  (v14)[1] = 2131213819;
  (v14)[2] = 2066125451;
  (v14)[3] = 1814542286;
  (v14)[4] = 1572384873;
  (v14)[5] = 1572130949;
  (v14)[6] = 1785793852;
  (v14)[7] = 62681443;
  (v14)[8] = 2089532465;
  (v14)[9] = 816906484;
  (v14)[10] = 1429522120;
  (v14)[11] = 1549795912;
  (v14)[12] = 428689369;
  (v14)[13] = 628133319;
  (v14)[14] = 2014009742;
  (v14)[15] = 2086304818;
  (v14)[16] = 1848484246;
  (v14)[17] = 2080127051;
  (v14)[18] = 305056327;
  (v14)[19] = 44041904;
  (v14)[20] = 1411976666;
  (v14)[21] = 704754407;
  (v14)[22] = 2137840436;
  (v14)[23] = 207874202;
  (v14)[24] = 1815102785;
  (v14)[25] = 1130431748;
  (v14)[26] = 370128537;
  (v14)[27] = 1033625101;
  (v14)[28] = 1362506961;
  (v14)[29] = 2077678103;
  (v14)[30] = 481022635;
  (v14)[31] = 869231692;
  (v14)[32] = 1827666577;
  (v14)[33] = 283678921;
  (v14)[34] = 648751944;
  (v14)[35] = 422320810;
  (v14)[36] = 646542480;
  (v14)[37] = 999777394;
  (v14)[38] = 966827897;
  (v14)[39] = 978076853;
  (v14)[40] = 558216531;
  (v14)[41] = 1167338217;
  (v14)[42] = 887681753;
  (v14)[43] = 1362406483;
  (v14)[44] = 876532388;
  (v14)[45] = 487880713;
  (v14)[46] = 779364081;
  (v14)[47] = 1814909562;
  (v14)[48] = 107637310;
  (v14)[49] = 1448677164;
  (v14)[50] = 1692163590;
  (v14)[51] = 2080682758;
  (v14)[52] = 783774892;
  (v14)[53] = 1813639083;
  (v14)[54] = 1491183588;
  (v14)[55] = 851330047;
  (v14)[56] = 1083814423;
  (v14)[57] = 305312956;
  (v14)[58] = 1695313177;
  (v14)[59] = 2069277031;
  (v14)[60] = 929210046;
  (v14)[61] = 684967986;
  (v14)[62] = 610077168;
  (v14)[63] = 1920497595;
  (v14)[64] = 1623589738;
  (v14)[65] = 878602599;
  (v14)[66] = 1546095633;
  (v14)[67] = 721544025;
  (v14)[68] = 570731333;
  (v14)[69] = 1497384328;
  (v14)[70] = 855468169;
  (v14)[71] = 1517490679;
  (v14)[72] = 702900049;
  (v14)[73] = 1600379682;
  (v14)[74] = 1786008059;
  (v14)[75] = 1642624588;
  (v14)[76] = 189237177;
  (v14)[77] = 2002554157;
  (v14)[78] = 1148008307;
  (v14)[79] = 99475349;
  (v14)[80] = 541929734;
  (v14)[81] = 883564639;
  (v14)[82] = 150170471;
  (v14)[83] = 214847005;
  (v14)[84] = 619626631;
  (v14)[85] = 1168914069;
  (v14)[86] = 1976416260;
  (v14)[87] = 1514520607;
  (v14)[88] = 40949682;
  (v14)[89] = 980563998;
  (v14)[90] = 821638897;
  (v14)[91] = 117903269;
  (v14)[92] = 433947730;
  (v14)[93] = 1072989590;
  (v14)[94] = 1217146982;
  (v14)[95] = 1831922794;
  (v14)[96] = 922636504;
  (v14)[97] = 1866512625;
  (v14)[98] = 1427721340;
  (v14)[99] = 2120417037;
  (v14)[100] = 321971671;
  (v14)[101] = 1600658204;
  (v14)[102] = 364389690;
  (v14)[103] = 1508281298;
  (v14)[104] = 1594782552;
  (v14)[105] = 989774484;
  (v14)[106] = 815605766;
  (v14)[107] = 130430939;
  (v14)[108] = 326091504;
  (v14)[109] = 1828297080;
  (v14)[110] = 1702896227;
  (v14)[111] = 1180063539;
  (v14)[112] = 1179565948;
  (v14)[113] = 2105604155;
  (v14)[114] = 289337669;
  (v14)[115] = 969347859;
  (v14)[116] = 205020439;
  (v14)[117] = 1204092289;
  (v14)[118] = 362024119;
  (v14)[119] = 927229448;
  (v14)[120] = 1119166752;
  (v14)[121] = 1130131803;
  (v14)[122] = 2104197924;
  (v14)[123] = 523291958;
  (v14)[124] = 623715846;
  (v14)[125] = 1018574740;
  (v14)[126] = 1989039080;
  (v14)[127] = 423499828;
  (v14)[128] = 738751329;
  (v14)[129] = 1175305455;
  (v14)[130] = 299020734;
  (v14)[131] = 217663840;
  (v14)[132] = 1556185912;
  (v14)[133] = 874267251;
  (v14)[134] = 345312311;
  (v14)[135] = 2093283633;
  (v14)[136] = 422181006;
  (v14)[137] = 1633140960;
  (v14)[138] = 693091040;
  (v14)[139] = 325712290;
  (v14)[140] = 533214921;
  (v14)[141] = 547266477;
  (v14)[142] = 559731864;
  (v14)[143] = 1917724208;
  (v14)[144] = 993485235;
  (v14)[145] = 1482634563;
  (v14)[146] = 1533817346;
  (v14)[147] = 327020083;
  (v14)[148] = 87052788;
  (v14)[149] = 1811003155;
  (v14)[150] = 418242202;
  (v14)[151] = 513976863;
  (v14)[152] = 1465114619;
  (v14)[153] = 1528624109;
  (v14)[154] = 1519397181;
  (v14)[155] = 1044314065;
  (v14)[156] = 408372089;
  (v14)[157] = 1741591636;
  (v14)[158] = 29714552;
  (v14)[159] = 548845763;
  (v14)[160] = 1750332776;
  (v14)[161] = 618536084;
  (v14)[162] = 1427257580;
  (v14)[163] = 748418820;
  (v14)[164] = 60149011;
  (v14)[165] = 1912052873;
  (v14)[166] = 1211442423;
  (v14)[167] = 1354475871;
  (v14)[168] = 1000151573;
  (v14)[169] = 87552179;
  (v14)[170] = 1063103710;
  (v14)[171] = 1136835207;
  (v14)[172] = 1448968401;
  (v14)[173] = 1928060248;
  (v14)[174] = 587826429;
  (v14)[175] = 1983517168;
  (v14)[176] = 1280061618;
  (v14)[177] = 1448670689;
  (v14)[178] = 659647800;
  (v14)[179] = 627560694;
  (v14)[180] = 1879175148;
  (v14)[181] = 128851027;
  (v14)[182] = 246805291;
  (v14)[183] = 2040150524;
  (v14)[184] = 1169211620;
  (v14)[185] = 1530832870;
  (v14)[186] = 36175111;
  (v14)[187] = 1352326327;
  (v14)[188] = 269198049;
  (v14)[189] = 262590309;
  (v14)[190] = 33820044;
  (v14)[191] = 667468595;
  (v14)[192] = 1572796737;
  (v14)[193] = 1360799412;
  (v14)[194] = 1087157687;
  (v14)[195] = 1087534357;
  (v14)[196] = 161520498;
  (v14)[197] = 987717521;
  (v14)[198] = 1461595689;
  (v14)[199] = 752202877;
  (v14)[200] = 1109404745;
  (v14)[201] = 512895276;
  (v14)[202] = 409834798;
  (v14)[203] = 1969394892;
  (v14)[204] = 2127079146;
  (v14)[205] = 1995065051;
  (v14)[206] = 1611770648;
  (v14)[207] = 1619131980;
  (v14)[208] = 133881655;
  (v14)[209] = 386305996;
  (v14)[210] = 805661366;
  (v14)[211] = 1931328952;
  (v14)[212] = 54041780;
  (v14)[213] = 1222125271;
  (v14)[214] = 1710834758;
  (v14)[215] = 488468605;
  (v14)[216] = 2061314846;
  (v14)[217] = 1096130605;
  (v14)[218] = 1042693567;
  (v14)[219] = 429544821;
  (v14)[220] = 1447551892;
  (v14)[221] = 628254686;
  (v14)[222] = 363721636;
  (v14)[223] = 1723103242;
  (v14)[224] = 1731235382;
  (v14)[225] = 805370010;
  (v14)[226] = 1674556322;
  (v14)[227] = 1929353857;
  (v14)[228] = 1264329452;
  (v14)[229] = 1984136467;
  (v14)[230] = 1349994847;
  (v14)[231] = 1303334244;
  (v14)[232] = 1628331082;
  (v14)[233] = 551565519;
  (v14)[234] = 1359388866;
  (v14)[235] = 101142525;
  (v14)[236] = 1951661912;
  (v14)[237] = 1249637117;
  (v14)[238] = 569916759;
  (v14)[239] = 2134499806;
  (v14)[240] = 232990404;
  (v14)[241] = 1886113037;
  (v14)[242] = 975446308;
  (v14)[243] = 1053112581;
  (v14)[244] = 1268094870;
  (v14)[245] = 1043379629;
  (v14)[246] = 857639786;
  (v14)[247] = 172927167;
  (v14)[248] = 1695985914;
  (v14)[249] = 645756413;
  (v14)[250] = 232423012;
  (v14)[251] = 1854199587;
  (v14)[252] = 1077447072;
  (v14)[253] = 355968750;
  (v14)[254] = 1721491754;
  (v14)[255] = 535489998;
  (v14)[256] = 1402305993;
  (v14)[257] = 1317688175;
  (v14)[258] = 945773590;
  (v14)[259] = 300423526;
  (v14)[260] = 1026070372;
  (v14)[261] = 344209457;
  (v14)[262] = 792396817;
  (v14)[263] = 1026368735;
  (v14)[264] = 513460408;
  (v14)[265] = 690352782;
  (v14)[266] = 1178757932;
  (v14)[267] = 521131214;
  (v14)[268] = 1599610314;
  (v14)[269] = 1135353631;
  (v14)[270] = 1457483781;
  (v14)[271] = 148387071;
  (v14)[272] = 772521172;
  (v14)[273] = 974258211;
  (v14)[274] = 1702777797;
  (v14)[275] = 1402521942;
  (v14)[276] = 1764217493;
  (v14)[277] = 444315018;
  (v14)[278] = 1603464494;
  (v14)[279] = 1697316887;
  (v14)[280] = 1594063105;
  (v14)[281] = 1770648468;
  (v14)[282] = 497851553;
  (v14)[283] = 309898414;
  (v14)[284] = 1186635422;
  (v14)[285] = 592080198;
  (v14)[286] = 2144743885;
  (v14)[287] = 180552467;
  (v14)[288] = 771930008;
  (v14)[289] = 1681278636;
  (v14)[290] = 153633888;
  (v14)[291] = 1309180783;
  (v14)[292] = 1334611266;
  (v14)[293] = 196218473;
  (v14)[294] = 396641483;
  (v14)[295] = 2087807587;
  (v14)[296] = 810281190;
  (v14)[297] = 1588182814;
  (v14)[298] = 1898862858;
  (v14)[299] = 291269931;
  (v14)[300] = 419646668;
  (v14)[301] = 575732804;
  (v14)[302] = 1331952939;
  (v14)[303] = 154322527;
  (v14)[304] = 931093203;
  (v14)[305] = 200978805;
  (v14)[306] = 1038499483;
  (v14)[307] = 749637677;
  (v14)[308] = 840547314;
  (v14)[309] = 1733601630;
  (v14)[310] = 1763064538;
  (v14)[311] = 1312964454;
  (v14)[312] = 2066707352;
  (v14)[313] = 405535842;
  (v14)[314] = 1766774428;
  (v14)[315] = 1948162250;
  (v14)[316] = 2039491362;
  (v14)[317] = 41072808;
  (v14)[318] = 1559839128;
  (v14)[319] = 815599475;
  (v14)[320] = 1576569376;
  (v14)[321] = 519955675;
  (v14)[322] = 1222512037;
  (v14)[323] = 82984976;
  (v14)[324] = 1116760248;
  (v14)[325] = 923853932;
  (v14)[326] = 134660052;
  (v14)[327] = 843728086;
  (v14)[328] = 374297052;
  (v14)[329] = 2012300556;
  (v14)[330] = 523741170;
  (v14)[331] = 1796150395;
  (v14)[332] = 101626499;
  (v14)[333] = 233601624;
  (v14)[334] = 650618375;
  (v14)[335] = 2129630561;
  (v14)[336] = 1331966825;
  (v14)[337] = 1729596992;
  (v14)[338] = 1640173750;
  (v14)[339] = 1054114208;
  (v14)[340] = 1761821167;
  (v14)[341] = 121436054;
  (v14)[342] = 167945589;
  (v14)[343] = 174970198;
  (v14)[344] = 75208106;
  (v14)[345] = 1677525100;
  (v14)[346] = 982022296;
  (v14)[347] = 13312660;
  (v14)[348] = 1616424471;
  (v14)[349] = 1405364248;
  (v14)[350] = 1070647953;
  (v14)[351] = 734884016;
  (v14)[352] = 2008834258;
  (v14)[353] = 1042657892;
  (v14)[354] = 252838285;
  (v14)[355] = 661482373;
  (v14)[356] = 1463685405;
  (v14)[357] = 1225631130;
  (v14)[358] = 376195610;
  (v14)[359] = 1750994840;
  (v14)[360] = 191320918;
  (v14)[361] = 528669554;
  (v14)[362] = 1004248735;
  (v14)[363] = 1377040393;
  (v14)[364] = 1323736500;
  (v14)[365] = 2004360551;
  (v14)[366] = 2079463391;
  (v14)[367] = 1595312031;
  (v14)[368] = 1673165697;
  (v14)[369] = 1176300987;
  (v14)[370] = 1545757250;
  (v14)[371] = 55630735;
  (v14)[372] = 285957909;
  (v14)[373] = 72866562;
  (v14)[374] = 674075327;
  (v14)[375] = 43018937;
  (v14)[376] = 1315548988;
  (v14)[377] = 742389116;
  (v14)[378] = 3552043;
  (v14)[379] = 1670921859;
  (v14)[380] = 2021364427;
  (v14)[381] = 1784478365;
  (v14)[382] = 116357099;
  (v14)[383] = 1080905680;
  (v14)[384] = 90289234;
  (v14)[385] = 1657302527;
  (v14)[386] = 2022809947;
  (v14)[387] = 1599181907;
  (v14)[388] = 376012538;
  (v14)[389] = 901959277;
  (v14)[390] = 2010693631;
  (v14)[391] = 1483921033;
  (v14)[392] = 1597220657;
  (v14)[393] = 1535966048;
  (v14)[394] = 1225165548;
  (v14)[395] = 660923031;
  (v14)[396] = 518616096;
  (v14)[397] = 1338027188;
  (v14)[398] = 1596839605;
  (v14)[399] = 813117769;
  (v14)[400] = 674709107;
  (v14)[401] = 1134978381;
  (v14)[402] = 16471449;
  (v14)[403] = 260478444;
  (v14)[404] = 673302765;
  (v14)[405] = 575882056;
  (v14)[406] = 120516438;
  (v14)[407] = 1147600701;
  (v14)[408] = 480639270;
  (v14)[409] = 332286612;
  (v14)[410] = 134018083;
  sort(411, v14);
  int v16 = 0;
  print_int((v14)[0]);
  for (int v15 = 1; (v15) < (411); v15++) {
    print_int((v14)[v15]);
    assert(((v14)[(v15) - (1)]) <= ((v14)[v15]));
    v16 = (v16) + (((v14)[v15]) * (v15));
  }
  return v16;
}

