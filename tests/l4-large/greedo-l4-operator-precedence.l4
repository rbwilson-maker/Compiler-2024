//test return 42

typedef int* a_t;
typedef a_t* b_t;
typedef b_t* c_t;
typedef c_t* d_t;
typedef d_t* e_t;
typedef e_t* f_t;
typedef f_t* g_t;
typedef g_t* h_t;
typedef h_t* i_t;
typedef i_t* j_t;
typedef j_t* k_t;
typedef k_t* l_t;
typedef l_t* m_t;
typedef m_t* n_t;
typedef n_t* o_t;
typedef o_t* p_t;
typedef p_t* q_t;
typedef q_t* r_t;
typedef r_t* s_t;
typedef s_t* t_t;
typedef t_t* u_t;
typedef u_t* v_t;
typedef v_t* w_t;
typedef w_t* x_t;
typedef x_t* y_t;
typedef y_t* z_t;
typedef z_t[] as;
typedef as[] bs;
typedef bs[] cs;
typedef cs[] ds;
typedef ds[] es;
typedef es[] fs;
typedef fs[] gs;
typedef gs[] hs;
typedef hs[] is;
typedef is[] js;
typedef js[] ks;
typedef ks[] ls;
typedef ls[] ms;
typedef ms[] ns;
typedef ns[] os;
typedef os[] ps;
typedef ps[] qs;
typedef qs[] rs;
typedef rs[] ss;
typedef ss[] ts;
typedef ts[] us;
typedef us[] vs;
typedef vs[] ws;
typedef ws[] xs;
typedef xs[] ys;
typedef ys[] zs;

int main () {

    a_t a = alloc(int);
    b_t b = alloc(int*);
    c_t c = alloc(int**);
    d_t d = alloc(int***);
    e_t e = alloc(int****);
    f_t f = alloc(int*****);
    g_t g = alloc(int******);
    h_t h = alloc(int*******);
    i_t i = alloc(int********);
    j_t j = alloc(int*********);
    k_t k = alloc(int**********);
    l_t l = alloc(int***********);
    m_t m = alloc(int************);
    n_t n = alloc(int*************);
    o_t o = alloc(int**************);
    p_t p = alloc(int***************);
    q_t q = alloc(int****************);
    r_t r = alloc(int*****************);
    s_t s = alloc(int******************);
    t_t t = alloc(int*******************);
    u_t u = alloc(int********************);
    v_t v = alloc(int*********************);
    w_t w = alloc(int**********************);
    x_t x = alloc(int***********************);
    y_t y = alloc(int************************);
    z_t z = alloc(int*************************);
    as A = alloc_array(z_t, 1);
    bs B = alloc_array(z_t[], 2);
    cs C = alloc_array(z_t[][], 3);
    ds D = alloc_array(z_t[][][], 4);
    es E = alloc_array(z_t[][][][], 5);
    fs F = alloc_array(z_t[][][][][], 6);
    gs G = alloc_array(z_t[][][][][][], 7);
    hs H = alloc_array(z_t[][][][][][][], 8);
    is I = alloc_array(z_t[][][][][][][][], 9);
    js J = alloc_array(z_t[][][][][][][][][], 10);
    ks K = alloc_array(z_t[][][][][][][][][][], 11);
    ls L = alloc_array(z_t[][][][][][][][][][][], 12);
    ms M = alloc_array(z_t[][][][][][][][][][][][], 13);
    ns N = alloc_array(z_t[][][][][][][][][][][][][], 14);
    os O = alloc_array(z_t[][][][][][][][][][][][][][], 15);
    ps P = alloc_array(z_t[][][][][][][][][][][][][][][], 16);
    qs Q = alloc_array(z_t[][][][][][][][][][][][][][][][], 17);
    rs R = alloc_array(z_t[][][][][][][][][][][][][][][][][], 18);
    ss S = alloc_array(z_t[][][][][][][][][][][][][][][][][][], 19);
    ts T = alloc_array(z_t[][][][][][][][][][][][][][][][][][][], 20);
    us U = alloc_array(z_t[][][][][][][][][][][][][][][][][][][][], 21);
    vs V = alloc_array(z_t[][][][][][][][][][][][][][][][][][][][][], 22);
    ws W = alloc_array(z_t[][][][][][][][][][][][][][][][][][][][][][], 23);
    xs X = alloc_array(z_t[][][][][][][][][][][][][][][][][][][][][][][], 24);
    ys Y = alloc_array(z_t[][][][][][][][][][][][][][][][][][][][][][][][], 25);
    zs Z = alloc_array(z_t[][][][][][][][][][][][][][][][][][][][][][][][][], 26);
    Z[25] = Y;
    *a = 42;
    Y[24] = X;
    *b = a;
    X[23] = W;
    *c = b;
    W[22] = V;
    *d = c;
    V[21] = U;
    *e = d;
    U[20] = T;
    *f = e;
    T[19] = S;
    *g = f;
    S[18] = R;
    *h = g;
    R[17] = Q;
    *i = h;
    Q[16] = P;
    *j = i;
    P[15] = O;
    *k = j;
    O[14] = N;
    *l = k;
    N[13] = M;
    *m = l;
    M[12] = L;
    *n = m;
    L[11] = K;
    *o = n;
    K[10] = J;
    *p = o;
    J[9] = I;
    *q = p;
    I[8] = H;
    *r = q;
    H[7] = G;
    *s = r;
    G[6] = F;
    *t = s;
    F[5] = E;
    *u = t;
    E[4] = D;
    *v = u;
    D[3] = C;
    *w = v;
    C[2] = B;
    *x = w;
    B[1] = A;
    *y = x;
    A[0] = z;
    *z = y;

    return **************************Z[25][24][23][22][21][20][19][18][17][16][15][14][13][12][11][10][9][8][7][6][5][4][3][2][1][0];

}