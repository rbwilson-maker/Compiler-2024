//test return 314159265
//Calculates pi to 800 digits

struct output_t{
    int n;
    int[] buf;
};

typedef struct output_t * op;

void print_4(int x, op o){
    int[] str = alloc_array(int, 4);
    int i;
    for(i=0;i<4;i++){
        str[i] = x % 10;
        x /= 10;
    }

    for(i=3;i>=0;i--){
        print_int(str[i]);
        o->buf[o->n] = str[i];
        o->n++;
    }
}

int main(){
    op oo = alloc(struct output_t);
    oo->buf = alloc_array(int, 10000);
    oo->n = 0;

    int[] r = alloc_array(int, 2801);
    int i;
    int k;
    int b;
    int d;
    int c = 0;

    for(i=0;i<2800;i++){
        r[i] = 2000;
    }

    for(k=2800; k>0; k-=14){
        d = 0;
        i = k;
        bool flag = true;
        while(flag){
            d += r[i] * 10000;
            b = 2 * i - 1;
            r[i] = d%b;
            d /= b;
            i--;
            if(i == 0) flag = false;
            else d *= i;
        }

        int pp = c + d / 10000;
        print_4(pp,oo);
        c = d % 10000;       
    }

    int pi = 0;
    for(i=0;i<9;i++) pi = pi * 10 + oo->buf[i];

    print_int(oo->n);

    return pi;
}