//test return 0
//RSA

int mod_exp(int a, int b, int m){
	int x = 1;
	for(int i=0;i<b;i++){
		x *= a;
		x %= m;
	}
	return x;
}

int gcd(int a, int b){
	if(b == 0){
		return a;
	}
	return gcd(b, a % b);
}

int mod_inv(int a, int m){
	int m0 = m;
	int x = 1;
	int y = 0;

	if(m == 1){
		return 0;
	}

	while(a > 1){
		int q = a / m;
		int t = m;

		m = a % m;
		a = t;
		t = y;

		y = x - q * y;
		x = t;
	}

	if(x<0){
		x += m0;
	}

	return x;
}

int encrypt(int m, int e, int n){
	return mod_exp(m,e,n);
}

int decrypt(int c, int d, int n){
	return mod_exp(c,d,n);
}


int main(){
	int p = 199;
	int q = 401;
	int n = p * q;
	int phi = (p-1) * (q-1);

	int e = 2;
	while(gcd(e,phi) != 1){
		e++;
	}
	int d = mod_inv(e,phi);

	int message = 210;
	assert(encrypt(decrypt(message,e,n),d,n) == message);
	return 0;
}

