//test return 0

bool is_palindrome(int x) {
  int m0_0 = 0xff;
  int m0_1 = m0_0 << 8  | m0_0;
  int m0   = m0_1 << 16 | m0_1;  // 0x00000000ffffffff

  int m1 = m0 ^ (m0 << 16);      // 0x0000ffff0000ffff
  int m2 = m1 ^ (m1 <<  8);      // 0x00ff00ff00ff00ff
  int m3 = m2 ^ (m2 <<  4);      // 0x0f0f0f0f0f0f0f0f
  int m4 = m3 ^ (m3 <<  2);      // 0x3333333333333333

  int x0 = x;
  int x1 = ((x0     ) << 16) | (x0 >> 16 & m0);
  int x2 = ((x1 & m1) <<  8) | (x1 >>  8 & m1);
  int x3 = ((x2 & m2) <<  4) | (x2 >>  4 & m2);
  int x4 = ((x3 & m3) <<  2) | (x3 >>  2 & m3);
  int x5 = ((x4 & m4) <<  1) | (x4 >>  1 & m4);

  return (x0 ^ x5) == 0;
}

bool is_zero(int x) {
  for (int i = 0; i < 32; i++) {
    if (!is_palindrome(x))
      return false;
    x >>= 1;
  }
  return true;
}

int main() {
  int n = 42;
  return is_zero(n) ? n : 0;
}