//test return 0
// verify that all ints in equivalence classes up to modulo 15150 has a
// multiplicative inverse when relatively prime. Also tests recursive functions.

bool relprime (int x, int y) {
  int min = x < y ? x : y;
  bool relprime = true;
  for (int i = 2; i < min; i++) {
    if (x % i == 0 && y % i == 0) { relprime = false; }
  }
  return relprime;
}

// make this recursive to test recursion!
bool hasmultinv (int x, int m, int invtest) {
  if (invtest == m) { return false; }
  if ((x * invtest) % m == 1) { return true; }
  return hasmultinv (x, m, invtest + 1);
}

bool isprime (int x) {
  for (int i = 2; i < x; i++) {
    if (x % i == 0) return false;
  }
  return true;
}

int main () {
  for (int m = 2; m < 451; m++) {
    if (isprime (m)) {
      for (int x = 1; x < m; x++) {
        if (relprime (x, m) && ! hasmultinv (x, m, 0)) {
          return 1;
        }
      }
    }
  }
  return 0;
}
