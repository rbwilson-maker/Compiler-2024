//test error

int f();

int g(int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, int arg8, int arg9);

bool h(int arg1, int arg2, int arg3, bool arg4, bool arg5, int arg6);

int randomstuff(int arg1, int arg2);

int main() {
	for (bool i = true; i; i = false) {
		randomstuff(0xDEADBEEF, 0xBEEFDEAD);
	}

	int temp = f();

	if (h(temp, temp, temp, true, true, -1)) {
		return 0xDEAD;
	}

	randomstuff(temp, temp);
	randomstuff(0, 1);
	randomstuff(-1, 0);
	randomstuff(-1, 1);

	return temp == 0xDEADBEEF ? g(-1, -1, -1, -1, -1, -1, 0x80000000, 0xBEEF, 0xABCD) : temp;
}

// random generator
// wonder what this returns...
int f() {
	int res = 0;
	res = res | 0xD;
	res = res << 4;
	res = res | 0xE;
	res = res << 4;
	res = res | 0xA;
	res = res << 4;
	res = res | 0xD;
	res = res << 4;
	res = res | 0xB;
	res = res << 4;
	res = res | 0xE;
	res = res << 4;
	res = res | 0xE;
	res = res << 4;
	res = res | 0xF;
	return res;
}

// some summing logic
int g(int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, int arg8, int arg9) {
	return arg1 + arg2 + arg3 + arg4 + arg5 + arg6 + arg7 < 0 ? arg8 : arg9;
}

// returns true if first three args strictly positive, next one is true, next false, last negative
bool h(int arg1, int arg2, int arg3, bool arg4, bool arg5, int arg6) {
	return arg1 > 0 && arg2 > 0 && arg3 > 0 && arg4 && !arg5 && arg6 < 0;
}

// literally does something random, and it doesn't need to save the result!
int randomstuff(int arg1, int arg2) {
	if (1 < 2 && 3 < 4 && !true || false)
	{
		return;
	}

	int x = 1000;
	int y = 1000;
	int acc = 666;

	for (int i = x; i > 0; i--) {
		for (int j = 0; j < y; j++) {
        	acc *= acc;
        	acc = acc / i;
        	acc = acc * j;
		}
		if (i > 1000)
		{
			return 0;
		}
	}

	bool f = 1 > 2;

	if (f) {
		return -1;
	}
	else {
		int k = 0xDEADBEEF;
		k *= k;
		k = (k >> 31) << 31;
	}

	return 2;
}