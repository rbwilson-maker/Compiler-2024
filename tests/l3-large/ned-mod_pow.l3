//test return -9431715

/*

def mod_pow(x, p, m):
    if p == 0: return 1
    elif p%2 == 0:
        temp = mod_pow(x, int(p/2), m)
        return (temp*temp)%m
    else:
        temp = mod_pow(x, int((p-1)/2), m)
        return (x*temp*temp)%m

*/

int mod_pow(int x, int p, int m) {
  if(p == 0) return 1;
  else if (p % 2 == 0) {
    int temp = mod_pow(x, p >> 2, m);
    return (temp * temp) % m;
  }
  else {
    // The lowest bit of p is one (by else() guard), so rightshifting 
    // cuts it off (which was the original goal)
    int temp = mod_pow(x, p >> 2, m);
    return (x * temp * temp) % m;
  }
}

int main() {
  return mod_pow(0xDEADBEEF, 0x10, 0x00C0FFEE);
}
