//test return 0

bool is_prime(int n)
    //@requires n>=2;
{
    for (int i=2; i<n-1; i++) {
        if (n % i == 0) return false;
    }
    return true;
}

int[] prime_sieve(int n)
    //@ensures \forall {\result} (\element == -1 || is_prime(\element));
{
    int i;
    int j;
    int [] numbers = alloc_array(int, n);

    /*fill the array with natural numbers*/
    for (i=0;i<n;i++){
        numbers[i]=i+2;
    }

    /*sieve the non-primes*/
    for (i=0;i<n;i++){
        if (numbers[i]!=-1){
            for (j=2*numbers[i]-2;j<n;j+=numbers[i])
                numbers[j]=-1;
        }
    }
    return numbers;
}

int main() {
    int [] primes = prime_sieve(1000);
    return 0;
}
